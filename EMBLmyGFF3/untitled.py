   parser.add_argument("gff_file", help="Input gff-file.")
    parser.add_argument("fasta", help="Input fasta sequence.")
    parser.add_argument("-a", "--accession", default=None, help="Accession number(s) for the entry. This value is automatically filled up by ENA during the submission by a unique accession number they will assign.")
    parser.add_argument("-c", "--created", default=None, help="Creation time of the original entry.")
    parser.add_argument("-d", "--data_class", default=None, help="Data class of the sample.", choices=["CON", "PAT", "EST", "GSS", "HTC", "HTG", "MGA", "WGS", "TSA", "STS", "STD"])
    parser.add_argument("-g", "--organelle", default=None, help="Sample organelle.")
    parser.add_argument("-i", "--locus_tag", help="Locus tag prefix used to set up the prefix of the locus_tag qualifier. The locus tag has to be registered at ENA prior any submission")
    parser.add_argument("-k", "--keyword", default=[], nargs="+", help="Keywords for the entry.")
    parser.add_argument("-l", "--classification", help="Organism classification e.g \"Eukaryota; Opisthokonta; Metazoa;\". If not set, will be retrieved online on the NCBI taxonomy DB based on the species name or taxid.")
    parser.add_argument("-m", "--molecule_type", default=None, help="Molecule type of the sample.", choices=["genomic DNA", "genomic RNA", "mRNA", "tRNA", "rRNA", "other RNA", "other DNA", "transcribed RNA", "viral cRNA", "unassigned DNA", "unassigned RNA"])
    parser.add_argument("-o", "--output", default=None, help="Output filename.")
    parser.add_argument("-p", "--project_id", help="Project ID.")
    parser.add_argument("-r", "--transl_table", type=int, default=None, help="Translation table.", choices=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])
    parser.add_argument("-s", "--species", default=None, help="Species, formatted as 'Genus species' or using a taxid.")
    parser.add_argument("-t", "--topology", default=None, help="Sequence topology.", choices=["linear", "circular"])

    parser.add_argument("-z", "--gzip", default=False, action="store_true", help="Gzip output file")

    parser.add_argument("--de", default="XXX", help="Description.")
    parser.add_argument("--rc", default=None, help="Reference Comment.")
    parser.add_argument("--rx", default=None, help="Reference cross-reference.")
    parser.add_argument("--rg", default="XXX", help="Reference Group, the working groups/consortia that produced the record.")
    parser.add_argument("--ra", "--author", nargs="+", default="", help="Author for the reference.")
    parser.add_argument("--rt", default=";", help="Reference Title.")
    parser.add_argument("--rl", default=None, help="Reference publishing location.")

    parser.add_argument("--no_wrap_qualifier", action="store_true", action="store_true", help="To avoid line-wrapping for qualifiers.")
    parser.add_argument("--keep_duplicates", action="store_true", help="Do not remove duplicate features during the process.")
    parser.add_argument("--interleave_genes", action="store_false", help="Print gene features with interleaved mRNA and CDS features.")
    parser.add_argument("--force_unknown_features", action="store_true", help="Force to keep feature types not accepted by EMBL. /!\ Option not suitable for submission purpose.")
    parser.add_argument("--force_uncomplete_features", action="store_true", help="Force to keep features whithout all the mandatory qualifiers. /!\ Option not suitable for submission purpose.")
    parser.add_argument("--locus_numbering_start", default=1, type=int, help="Start locus numbering with the provided value.")

    parser.add_argument("--email", default=None, help="Email used to fetch information from NCBI taxonomy database.")
    parser.add_argument("--shame", action="store_true", help="Suppress the shameless plug.")
    parser.add_argument("--translate", action="store_true", help="Include translation in CDS features.")

    parser.add_argument("--expose_translations", action="store_true", help="Copy feature and attribute mapping files to the working directory.")
    parser.add_argument("--no_progress", action="store_false", help="Hide conversion progress counter.")
    parser.add_argument("--version", default=None, type=int, help="Sequence version number.")
    parser.add_argument("-x", "--taxonomy", default=None, help="Source taxonomy.", choices=["PHG", "ENV", "FUN", "HUM", "INV", "MAM", "VRT", "MUS", "PLN", "PRO", "ROD", "SYN", "TGN", "UNC", "VRL"])

    parser.add_argument("-v", "--verbose", action="count", default=2, help="Increase verbosity.")
    parser.add_argument("-q", "--quiet", action="count", default=0, help="Decrease verbosity.")
    parser.add_argument("--uncompressed_log", action="store_true", help="Some logs can be compressed for better lisibility, they won't.")

    parser.add_argument("--ah", "--advanced_help", choices=["One of the parameters above"], help="It displays advanced information of the parameter specified. If you don't specify any parameter it will display advanced information of all of them.")

    args = parser.parse_args()